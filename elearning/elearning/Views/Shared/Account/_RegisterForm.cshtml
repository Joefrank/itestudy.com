@model elearning.model.ViewModels.RegisterVm
@using System.Collections.Generic;

@{ 
    var titleList = new List<KeyValuePair<string, string>>()
    {
        new KeyValuePair<string, string>("Mr", "Mr"),
        new KeyValuePair<string, string>("Mrs", "Mrs"),
        new KeyValuePair<string, string>("Miss", "Miss"),
        new KeyValuePair<string, string>("Dr", "Dr"),
        new KeyValuePair<string, string>("Pr", "Pr")
    };
}
<h2 class="medium-title">Sign Up</h2>
<!-- Register Form -->

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "frmCreateUser", name = "frmCreateUser" }))
{
        <div class="form-group text-danger">
            @Html.ValidationSummary(false)
        </div>

        <div class="form-group">
            @Html.DropDownListFor(x => x.Title, new SelectList(titleList, "Key", "Value"),new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.TextBoxFor(x => x.Firstname, new { @class = "form-control", @placeholder = "Firstname" })
            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.TextBoxFor(x => x.Lastname, new { @class = "form-control", @placeholder = "Lastname" })
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Email" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.PasswordFor(x => x.Password, new { @class = "form-control", @placeholder = "Password" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <input type="checkbox" id="ckAcceptedTerms" name="ckAcceptedTerms" onchange="SetCKValue('ckAcceptedTerms', 'AcceptedTerms')" />
            <label>I accept the <a href="/termsandconditions">terms and conditions</a>.</label><br />
            <input type="hidden" name="AcceptedTerms" id="AcceptedTerms" value="false" />
            @if (Model.IsDirty && !Model.AcceptedTerms)
            {
                <label class="text-danger">You need to accept our terms and conditions.</label>
            }
        </div>
        <div class="form-group">
            <input type="checkbox" id="ckReceiveNewsLetter" name="ckReceiveNewsLetter" onchange="SetCKValue('ckReceiveNewsLetter', 'ReceiveNewsLetter');" />
            <input type="hidden" id="ReceiveNewsLetter" name="ReceiveNewsLetter" value="false" />
            <label>Receive our Newsletter.</label>
        </div>
        <button class="btn btn-common" type="submit">Sign up for free</button>
        }

        <script>
            function SetCKValue(ctrlId, targetId) {
                var ctrlChecked = $('#' + ctrlId).is(":checked");
                $('#' + targetId).val(ctrlChecked);
            }

        </script>
