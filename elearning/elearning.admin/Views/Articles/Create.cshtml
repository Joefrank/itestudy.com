@using elearning.model.Enums
@using elearning.model.ViewModels
@using elearning.admin.Helpers;

@model elearning.model.ViewModels.EditArticleVm

<h2 class="medium-title">Create Article</h2>
<!-- Form -->

<link href="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css" rel="stylesheet">
<link href="~/Content/css/summernote/summernote.css" rel="stylesheet">





@{
    var categoryList = ArticleHelper.GetCategoryList();

    var typeList = ArticleHelper.GetArticleTypeList();

    var relatedObjectTypeList = ArticleHelper.GetArticleRelatedTypeList();
}

@using (Html.BeginForm("Create", "Articles", FormMethod.Post, new { id = "frmArticle", name = "frmArticle" }))
{
    <div class="form-group">
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Title" })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.TextBoxFor(x => x.YoutubeLinks, new { @class = "form-control", @placeholder = "Video Link" })
    </div>

    <div class="form-group">
        @Html.TextBoxFor(x => x.MainImageLink, new { @class = "form-control", @placeholder = "Main Image Link" })
    </div>

    <div class="form-group">
        @Html.DropDownListFor(x => x.CategoryId, new SelectList(categoryList, "Id", "Name"), "--Select Category--", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.DropDownListFor(x => x.Type, new SelectList(typeList, "Id", "Name"), "--Select Article Type--", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.DropDownListFor(x => x.RelatedObjectTypeId, new SelectList(relatedObjectTypeList, "Id", "Name"), "--Select Relation Type--", new { @class = "form-control", @onchange = "GetRelatedObjects(this)" })

        <span id="spRelatedObjects" style="display:none;">
            <br />
            <select id="RelatedObjectId" name="RelatedObjectId"></select>
        </span>
    </div>

    <div class="form-group">
        <textarea id="Content" name="Content"></textarea>
        @*@Html.TextAreaFor(x => x.Content, new { @class = "form-control", @placeholder = "Content" })
        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })*@
    </div>

    <button type="submit" class="btn btn-common">Create Article</button>

}







@section BottomScripts{
    @*<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script>
        <script src="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js"></script>*@
    <script src="~/scripts/htmleditor/summernote/summernote.min.js"></script>




    <script>
        $(document).ready(function () {
            $('#Content').summernote({
                //lang: 'ko-KR' // default: 'en-US'
                placeholder: 'Article Content',
                tabsize: 2,
                height: 400,                 // set editor height
                minHeight: null,             // set minimum height of editor
                maxHeight: null,             // set maximum height of editor
                focus: true
            });
        });
    </script>

}