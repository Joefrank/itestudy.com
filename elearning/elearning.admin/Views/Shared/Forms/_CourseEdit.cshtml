@model elearning.model.ViewModels.CourseEditVm

@{ 
    var actionEditName = Model.Id > 0 ? "SaveDetails" : "Create";
    var editLabel = Model.Id > 0 ? "Save" : "Create";
}

@using (Html.BeginForm(actionEditName, "Course", FormMethod.Post, new { id = "frmCourse", name = "frmCourse" }))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.Id)

    <div class="form-group">
        @Html.HiddenFor(x => x.MainImageLink)
    </div>

    <div class="form-group">
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Course Title" })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.DropDownListFor(x => x.CategoryId, new SelectList(Model.CourseCategories, "Id", "Name"), "--Select Category--", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.TextBoxFor(x => x.YoutubeLink, new { @class = "form-control", @placeholder = "YoutubeLink" })
    </div>
    <div class="form-group" id="youtubepreview"></div>
    <div class="form-group">
        @Html.TextAreaFor(x => x.ShortDescription, new { @class = "form-control", @placeholder = "ShortDescription" })
        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <textarea id="Description" name="Description">@Model.Description</textarea>
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
    <button type="submit" class="btn btn-common">@editLabel Course</button>

}
